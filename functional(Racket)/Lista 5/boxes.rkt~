#lang racket

(require "sudoku-spec.rkt")

(provide
 rows->board board-rows board-columns board-boxes ; Zad A
 )                                                 ; Zad B

;; =========
;; Zadanie A
;; =========

;; Tworzy planszę z wierszy (listy list znaków z alfabetu)
(define (rows->board xss)
  xss)

;; Ujawnia listę wierszy (każdy wiersz to lista znaków z alfabetu)
(define (board-rows board)
  board)

;; Ujawnia listę kolumn (każda kolumna to lista znaków z alfabetu)
(define (board-columns board)

  (define (makelist n)
    (define (addlength x acc)
      (if (equal? x 0) acc
          (addlength (- x 1)
                     (cons null acc))))
    (addlength n null))  

  (define (zip xs ys)
    (define (reduce x y acc) (cons (cons x y) acc))
    (foldr reduce null xs ys))
  (foldr zip (makelist  (length board)) board))

;; Ujawnia listę pudełek (każde pudełko to lista znaków z alfabetu)
(define (board-boxes board)
  (error "tu uzupełnij!"))

;; przykład
(define plansza (rows->board '((1 2 3 4)(1 2 3 4)(1 2 3 4)(1 2 3 4))))
(board-columns plansza)